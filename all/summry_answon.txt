





1、java
    1.1、多线程
    1.2、localthread
    1.3、voliate
    1.4、多线程同步
    1.5 内存模型
    1.6、GC cms

2、scala
    2.1、语言特性
    2.2、伴生类伴生对象
    2.3、apply 和 unapply
    2.4、trait 的特性
    2.5、隐式转换
    2.6、便函数 和 柯里化 区别
    2.7、协变和逆变

3、spark core
    3.1、blockManager
    3.2、sparkcontext初始化做了哪些事
    3.3、DAGschduler 是如何划分 stage 的
    3.4、taskset 是如何分发到各个 excutor的
    3.5、excutor的内存管理模型； 1.6 之前 和之后 的区别，  动态分配的 分配比例
    3.6、强制启用 1.6之前的内存模型 配置参数
    3.7、shuffle 过程
    3.8、spark 2.0 新特性 总结

4、spark streaming
    4.1、streaming 的背压
    4.2、如果 streaming 从kafka 中取数， 来不及处理 ，积累了大量数据该怎么办
    4.3、kafka 的两种机制， reciver 和direct 模式区别
    4.4、streaming 优雅的关闭 和 重启
    4.5、streaming 中的 集中高级 api
    4.6、Dstream 的join 问题

5、kafka
    5.1、kafka 再分配机制
    5.2、0.8 和0.9 的区别
    5.3、kafka 的controler 组件的作用
    5.4、面试总结


6、flumne
    6.1、基础概念
    6.2、面试总结

7、zeeoper
    7.1 面试总结
    7.2、 怎么实现 HA
    7.3、线上线下动态切换

8、hadoop
    8.1、jobhistory 作用
    8.2、高可用的实现 原理
    8.3、在hadoopHA中会不会出现两个active状态的namenode
    8.4、然后会问你，如果因为通信问题A NAMENODE被认为挂了，B接手了，这时候如果A恢复了，那么是怎么进行分配的，为什么？
    8.5、yarn 的模型
    8.6、spark 运行在yarn 上的运行模式区别


9、项目
    9.1、项目里遇到的问题如何进行优化， 为什么要进行优化

10、hbase

11、redis 缓存框架

12、数据产品 技能
